name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install backend dependencies
      run: cd apps/backend && npm ci
    
    - name: Install frontend dependencies
      run: cd apps/frontend && npm ci
    
    - name: Generate Prisma client
      run: cd apps/backend && npx prisma generate
    
    - name: Run backend tests
      run: cd apps/backend && npm test
    
    - name: Run frontend tests
      run: cd apps/frontend && npm test
    
    - name: Run backend linting
      run: cd apps/backend && npm run lint
    
    - name: Run frontend linting
      run: cd apps/frontend && npm run lint
    
    - name: Build backend
      run: cd apps/backend && npm run build
    
    - name: Build frontend
      run: cd apps/frontend && npm run build

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        npm audit --audit-level moderate
        cd apps/backend && npm audit --audit-level moderate
        cd ../frontend && npm audit --audit-level moderate

  deploy:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./apps/backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/ton-backend:latest
    
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./apps/frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/ton-frontend:latest